// Пример анимации волны
public void SetText( string text ) 
{
    _textGUI.SetText( text );
    _textGUI.ForceMeshUpdate();
    var textInfo = _textGUI.textInfo;
    originPositions = new Vector3[textInfo.meshInfo[0].vertices.Length];
    textInfo.meshInfo[0].vertices.CopyTo( originPositions, 0 );

}

private void Awake()
{
    _textGUI = GetComponent<TextMeshProUGUI>();
}

private void Update()
{
    if( originPositions == null ) {
        return;
    }
    var textInfo = _textGUI.textInfo;

    // Анимация волны
    for( int i = 0; i < textInfo.characterCount; i++ ) {
        var charInfo = textInfo.characterInfo[i];
        if( !charInfo.isVisible ) {
            continue;
        }

        var verts = textInfo.meshInfo[charInfo.materialReferenceIndex].vertices;

        float posX = originPositions[charInfo.vertexIndex].x;
        for( int j = 0; j < 4; j++ ) {
            var orig = originPositions[charInfo.vertexIndex + j];
            verts[charInfo.vertexIndex + j] = orig + new Vector3( 0, Mathf.Sin( Time.unscaledTime * _frequencyCoof + posX * _lengthCoof ) * _amplitude, 0 );
        }
    }

    for( int i = 0; i < textInfo.meshInfo.Length; i++ ) {
        var meshInfo = textInfo.meshInfo[i];
        meshInfo.mesh.vertices = meshInfo.vertices;
        _textGUI.UpdateGeometry( meshInfo.mesh, i );
    }
}

private TextMeshProUGUI _textGUI;// Соответствующий обработчику элемент GUI, занимающийся отображением текста

private float _frequencyCoof = 10f;
private float _lengthCoof = 0.04f;
private float _amplitude = 10;

Vector3[] originPositions;